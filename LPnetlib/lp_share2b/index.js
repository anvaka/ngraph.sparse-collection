module.exports = {"recordsPerEdge":3,"links":[11,10,1,12,11,1,13,12,1,14,13,1,15,14,1,16,15,1,17,16,1,18,17,1,19,18,1,21,19,1,22,20,1,23,21,1,24,22,1,25,23,1,26,24,1,27,25,1,28,26,1,29,27,1,31,28,1,32,29,1,33,30,1,34,31,1,35,32,1,36,33,1,37,34,1,38,35,1,39,36,1,41,37,1,42,38,1,43,39,1,44,40,1,45,41,1,46,42,1,47,43,1,48,44,1,49,45,1,51,46,1,52,47,1,53,48,1,54,49,1,55,50,1,56,51,1,57,52,1,58,53,1,59,54,1,61,55,1,62,56,1,63,57,1,64,58,1,65,59,1,66,60,1,67,61,1,68,62,1,69,63,1,70,64,1,71,65,1,72,66,1,73,67,1,74,68,1,75,69,1,76,70,1,77,71,1,78,72,1,85,73,1,86,74,1,87,75,1,88,76,1,89,77,1,90,78,1,91,79,1,92,80,1,93,81,1,94,82,1,95,83,1,1,84,65,2,84,1,3,84,-1,4,84,-1,5,84,-97.4,6,84,-99.9,7,84,-83.7,8,84,-85,10,84,1,1,85,5.5,2,85,0.68,3,85,-0.96,4,85,-1,5,85,-84,6,85,-88.1,7,85,-79.4,8,85,-83.2,10,85,1,61,85,1,1,86,0.8,4,86,-0.78,5,86,-87.9,6,86,-82.9,7,86,-74.6,8,86,-80.6,10,86,1,62,86,1,1,87,4.5,2,87,0.27,3,87,-0.97,4,87,-1,5,87,-97.9,6,87,-100.3,7,87,-95,8,87,-98,10,87,1,85,87,1,1,88,1.5,2,88,0.12,3,88,-0.36,4,88,-0.95,5,88,-60.6,6,88,-76.3,7,88,-68.6,8,88,-76.8,10,88,1,63,88,1,1,89,6,2,89,0.19,3,89,-0.35,4,89,-0.89,5,89,-94.8,6,89,-96.6,7,89,-83.8,8,89,-86.8,10,89,1,63,89,1.1,1,90,3.3,2,90,0.07,3,90,-0.29,4,90,-0.97,5,90,-97.9,6,90,-100.3,7,90,-95,8,90,-98,10,90,1,63,90,1.2,1,91,5.8,2,91,0.5,3,91,-0.62,4,91,-0.98,5,91,-96.5,6,91,-98.1,7,91,-80.8,8,91,-81.5,10,91,1,64,91,1,5,92,-2.1,6,92,-0.7,7,92,-2.3,8,92,-1,9,92,1,1,93,-11,2,93,-0.5,3,93,0.5,4,93,0.9,5,93,100,6,93,100,7,93,90,8,93,90,9,93,-3,10,93,-1,79,93,1,79,94,-1,80,94,1,79,95,-1,81,95,1,11,96,65,12,96,1,13,96,-1,14,96,-1,15,96,-97.4,16,96,-99.9,17,96,-83.7,18,96,-85,20,96,1,11,97,5.5,12,97,0.57,13,97,-1,14,97,-1,15,97,-84,16,97,-88.1,17,97,-79.4,18,97,-83.2,20,97,1,61,97,1,11,98,0.8,13,98,-0.01,14,98,-0.98,15,98,-87.9,16,98,-82.9,17,98,-74.6,18,98,-80.6,20,98,1,62,98,1,11,99,1.5,12,99,0.12,13,99,-0.36,14,99,-0.95,15,99,-60.6,16,99,-76.3,17,99,-68.6,18,99,-76.8,20,99,1,63,99,1,11,100,2.7,12,100,0.13,13,100,-0.28,14,100,-0.79,15,100,-77.9,16,100,-81.4,17,100,-70.6,18,100,-74,20,100,1,66,100,1,11,101,5.8,12,101,0.46,13,101,-0.67,14,101,-1,15,101,-96.5,16,101,-98.1,17,101,-80.8,18,101,-81.5,20,101,1,64,101,1,15,102,-3.5,16,102,-1.9,17,102,-3.4,18,102,-1.8,19,102,1,11,103,-11,12,103,-0.5,13,103,0.5,14,103,0.9,15,103,89,16,103,89,17,103,82,18,103,82,19,103,-3,20,103,-1,82,103,1,86,103,-0.25,21,104,70,22,104,1,23,104,-1,24,104,-1,25,104,-97.8,26,104,-102.3,27,104,-94.8,28,104,-99.8,30,104,1,21,105,9.5,22,105,0.7,23,105,-0.83,24,105,-1,25,105,-89.1,26,105,-92,27,105,-77.4,28,105,-80.1,30,105,1,65,105,1,21,106,2.7,22,106,0.13,23,106,-0.28,24,106,-0.79,25,106,-77.9,26,106,-81.4,27,106,-70.6,28,106,-74,30,106,1,66,106,1,21,107,10.8,22,107,0.97,23,107,-1,24,107,-1,25,107,-84.6,26,107,-89.7,27,107,-83.6,28,107,-89.4,30,107,1,67,107,1,21,108,1.5,22,108,0.12,23,108,-0.36,24,108,-0.95,25,108,-60.6,26,108,-76.3,27,108,-68.6,28,108,-76.8,30,108,1,68,108,1,21,109,6.2,22,109,0.19,23,109,-0.35,24,109,-0.89,25,109,-95.9,26,109,-97.6,27,109,-85.4,28,109,-87.8,30,109,1,68,109,1.2,21,110,6,22,110,0.19,23,110,-0.35,24,110,-0.89,25,110,-94.8,26,110,-96.6,27,110,-83.8,28,110,-86.8,30,110,1,68,110,1.1,21,111,4.5,22,111,0.27,23,111,-0.97,24,111,-1,25,111,-97.9,26,111,-100.3,27,111,-95,28,111,-98,30,111,1,85,111,1,21,112,5.5,22,112,0.68,23,112,-0.96,24,112,-1,25,112,-84,26,112,-88.1,27,112,-79.4,28,112,-83.2,30,112,1,61,112,1,21,113,6.5,22,113,0.48,23,113,-0.56,24,113,-0.97,25,113,-96.5,26,113,-97.1,27,113,-82.2,28,113,-83.3,30,113,1,64,113,1,25,114,-1.9,26,114,-0.9,27,114,-2.4,28,114,-0.9,29,114,1,21,115,-11,22,115,-0.5,23,115,0.5,24,115,0.9,25,115,100,26,115,100,27,115,90,28,115,90,29,115,-3,30,115,-1,80,115,1,80,116,-1,81,116,1,31,117,70,32,117,1,33,117,-1,34,117,-1,35,117,-97.8,36,117,-102.3,37,117,-94.8,38,117,-99.8,40,117,1,31,118,9.5,32,118,0.68,33,118,-0.9,34,118,-1,35,118,-89.1,36,118,-92,37,118,-77.4,38,118,-80.1,40,118,1,65,118,1,31,119,2.7,32,119,0.09,33,119,-0.37,34,119,-0.92,35,119,-77.9,36,119,-81.4,37,119,-70.6,38,119,-74,40,119,1,66,119,1,31,120,10.8,32,120,0.93,33,120,-1,34,120,-1,35,120,-84.6,36,120,-89.7,37,120,-83.6,38,120,-89.4,40,120,1,67,120,1,31,121,6.2,32,121,0.15,33,121,-0.45,34,121,-0.98,35,121,-95.9,36,121,-97.6,37,121,-85.4,38,121,-87.8,40,121,1,68,121,1.1,31,122,6.5,32,122,0.45,33,122,-0.63,34,122,-1,35,122,-96.5,36,122,-97.1,37,122,-82.2,38,122,-83.3,40,122,1,64,122,1,31,123,1.5,32,123,0.12,33,123,-0.36,34,123,-0.95,35,123,-60.6,36,123,-76.3,37,123,-68.6,38,123,-76.8,40,123,1,68,123,1,31,124,5.5,32,124,0.68,33,124,-0.96,34,124,-1,35,124,-84,36,124,-88.1,37,124,-79.4,38,124,-83.2,40,124,1,61,124,1,35,125,-3.9,36,125,-1.4,37,125,-3.5,38,125,-1.3,39,125,1,31,126,-11,32,126,-0.5,33,126,0.5,34,126,0.9,35,126,89,36,126,89,37,126,82,38,126,82,39,126,-3,40,126,-1,83,126,1,82,127,1,83,127,-1,86,127,0.75,41,128,56,42,128,1,43,128,-1,44,128,-1,45,128,-99.4,46,128,-103,47,128,-96.7,48,128,-101.2,50,128,1,41,129,1.8,44,129,-1,45,129,-87.9,46,129,-91.6,47,129,-88.1,48,129,-92,50,129,1,69,129,1,41,130,1.4,44,130,-0.54,45,130,-86.2,46,130,-90,47,130,-88,48,130,-91.3,50,130,1,70,130,1,41,131,10.6,42,131,0.68,43,131,-0.87,44,131,-1,45,131,-99.9,46,131,-100.4,47,131,-80.8,48,131,-81.7,50,131,1,71,131,1,41,132,2.5,44,132,-0.65,45,132,-89.6,46,132,-91.7,47,132,-79.3,48,132,-82.1,50,132,1,72,132,1,41,133,11.5,42,133,0.77,43,133,-0.93,44,133,-1,45,133,-79.5,46,133,-85.1,47,133,-80.2,48,133,-86.2,50,133,1,73,133,1,41,134,1.5,42,134,0.12,43,134,-0.36,44,134,-0.95,45,134,-60.6,46,134,-76.3,47,134,-68.6,48,134,-76.8,50,134,1,74,134,1,41,135,4.2,42,135,0.08,43,135,-0.3,44,135,-0.91,45,135,-99.5,46,135,-99.9,47,135,-87.6,48,135,-89,50,135,1,74,135,1.1,41,136,4.3,42,136,0.07,43,136,-0.27,44,136,-0.9,45,136,-101.4,46,136,-101.5,47,136,-89,48,136,-90.2,50,136,1,74,136,1.2,45,137,-1.6,46,137,-0.8,47,137,-2,48,137,-0.8,49,137,1,41,138,-10,42,138,-0.5,43,138,0.5,44,138,0.9,45,138,101,46,138,101,47,138,91,48,138,91,49,138,-3,50,138,-1,81,138,1,51,139,56,52,139,1,53,139,-1,54,139,-1,55,139,-97.7,56,139,-100.6,57,139,-94.5,58,139,-98.5,60,139,1,51,140,10.6,52,140,0.39,53,140,-1,54,140,-1,55,140,-98.2,56,140,-98,57,140,-78.6,58,140,-79,60,140,1,71,140,1,51,141,2.5,54,141,-0.87,55,141,-87.9,56,141,-89.3,57,141,-77.1,58,141,-79.4,60,141,1,72,141,1,51,142,3.6,52,142,0.27,53,142,-1,54,142,-1,55,142,-78.8,56,142,-82.7,57,142,-75.1,58,142,-80.5,60,142,1,75,142,1,51,143,11.5,52,143,0.73,53,143,-0.98,54,143,-1,55,143,-78.2,56,143,-82.7,57,143,-78,58,143,-83.5,60,143,1,73,143,1,51,144,2,53,144,-0.38,54,144,-1,55,144,-66.9,56,144,-71.4,57,144,-67.6,58,144,-73.8,60,144,1,76,144,1,51,145,14.6,52,145,1,53,145,-1,54,145,-1,55,145,-74.7,56,145,-79.8,57,145,-77.3,58,145,-83,60,145,1,77,145,1,51,146,6.1,52,146,0.33,53,146,-0.65,54,146,-1,55,146,-70.7,56,146,-75.9,57,146,-69.6,58,146,-75.3,60,146,1,78,146,1,51,147,4.2,52,147,0.04,53,147,-0.36,54,147,-0.98,55,147,-97.8,56,147,-97.5,57,147,-85.4,58,147,-86.3,60,147,1,74,147,1.1,55,148,-3.3,56,148,-1.6,57,148,-4.2,58,148,-1.7,59,148,1,51,149,-11,52,149,-0.5,53,149,0.5,54,149,0.9,55,149,89,56,149,89,57,149,82,58,149,82,59,149,-3,60,149,-1,84,149,1,82,150,1,84,150,-1,86,150,0.75,83,151,1,84,151,-1,87,152,56,88,152,1,89,152,-1,90,152,-1,91,152,-97.7,92,152,-100.6,93,152,-94.5,94,152,-98.5,96,152,1,71,153,1,87,153,10.6,88,153,0.39,89,153,-1,90,153,-1,91,153,-98.2,92,153,-98,93,153,-78.6,94,153,-79,96,153,1,72,154,1,87,154,2.5,90,154,-0.87,91,154,-87.9,92,154,-89.3,93,154,-77.1,94,154,-79.4,96,154,1,75,155,1,87,155,3.6,88,155,0.27,89,155,-1,90,155,-1,91,155,-78.8,92,155,-82.7,93,155,-75.1,94,155,-80.5,96,155,1,73,156,1,87,156,11.5,88,156,0.73,89,156,-0.98,90,156,-1,91,156,-78.2,92,156,-82.7,93,156,-78,94,156,-83.5,96,156,1,76,157,1,87,157,2,89,157,-0.38,90,157,-1,91,157,-66.9,92,157,-71.4,93,157,-67.6,94,157,-73.8,96,157,1,77,158,1,87,158,14.6,88,158,1,89,158,-1,90,158,-1,91,158,-74.7,92,158,-79.8,93,158,-77.3,94,158,-83,96,158,1,74,159,1.1,87,159,4.2,88,159,0.04,89,159,-0.36,90,159,-0.98,91,159,-97.8,92,159,-97.5,93,159,-85.4,94,159,-86.3,96,159,1,74,160,1.2,87,160,4.3,88,160,0.07,89,160,-0.27,90,160,-0.9,91,160,-101.4,92,160,-101.5,93,160,-89,94,160,-90.2,96,160,1,91,161,-3.3,92,161,-1.6,93,161,-4.2,94,161,-1.7,95,161,1,87,162,-10,88,162,-0.5,89,162,0.5,90,162,0.9,91,162,90,92,162,90,93,162,83,94,162,83,95,162,-3,96,162,-1],"description":"%MatrixMarket matrix coordinate real general\n-------------------------------------------------------------------------------\n UF Sparse Matrix Collection, Tim Davis\n http://www.cise.ufl.edu/research/sparse/matrices/LPnetlib/lp_share2b\n name: LPnetlib/lp_share2b\n [Netlib LP problem share2b: minimize c'*x, where Ax=b, lo<=x<=hi]\n id: 682\n date: \n author: M. Saunders\n ed: D. Gay\n fields: title name A b id aux kind date author ed notes\n aux: c lo hi z0\n kind: linear programming problem\n-------------------------------------------------------------------------------\n notes:\n A Netlib LP problem, in lp/data.  For more information                        \n send email to netlib@ornl.gov with the message:                               \n                                                                               \n \t send index from lp                                                          \n \t send readme from lp/data                                                    \n \t send minos from lp/data                                                     \n                                                                               \n The following are relevant excerpts from lp/data/readme (by David M. Gay):    \n                                                                               \n The column and nonzero counts in the PROBLEM SUMMARY TABLE below exclude      \n slack and surplus columns and the right-hand side vector, but include         \n the cost row.  We have omitted other free rows and all but the first          \n right-hand side vector, as noted below.  The byte count is for the            \n MPS compressed file; it includes a newline character at the end of each       \n line.  These files start with a blank initial line intended to prevent        \n mail programs from discarding any of the data.  The BR column indicates       \n whether a problem has bounds or ranges:  B stands for \"has bounds\", R         \n for \"has ranges\".                                                             \n                                                                               \n The optimal value is from MINOS version 5.3 (of Sept. 1988)                   \n running on a VAX with default options.                                        \n                                                                               \n                        PROBLEM SUMMARY TABLE                                  \n                                                                               \n Name       Rows   Cols   Nonzeros    Bytes  BR      Optimal Value             \n SHARE2B      97     79      730       4795       -4.1573224074E+02            \n                                                                               \n From Michael Saunders, Systems Optimization Laboratory at Stanford University.\n When included in Netlib: Extra free rows omitted.                             \n                                                                               \n The following are relevant excerts from lp/data/minos (by Michael Saunders),  \n regarding experience with MINOS 5.0 on the problems he provided:              \n                                                                               \n                                                      (unscaled)   (scaled)    \n File   Name    Rows  Cols  Elems  Optimal Objective  Itns  Time  Itns  Time   \n ---- --------  ----  ----  -----  -----------------  ----  ----  ----  ----   \n   3. SHARE2B     99    79    802 -4.1573224E+02        91   1.3   121   1.4   \n                                                                               \n * Objective  is the first row of type N.  It is minimized except as shown.    \n                                                                               \n * Itns       is the number of iterations required to solve the problem        \n              by the primal simplex method, as implemented in the Fortran      \n              code MINOS 5.0 (May 1985), using default values for all          \n              parameters.  (The initial basis is triangular.)                  \n                                                                               \n * Time       is the processor time required on an IBM 3081K.  The MINOS       \n              source code was compiled with the IBM Fortran 77 compiler        \n              VS FORTRAN, using the options NOSDUMP, NOSYM and OPT(3).         \n                                                                               \n-------------------------------------------------------------------------------"};